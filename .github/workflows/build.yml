name: Build Workflow

on:
  push:
    branches: [main]

jobs:
  build-windows:
    runs-on: windows-2022
    outputs:
      artifact_id: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt
      - run: python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: splitcoffee
          path: dist/splitcoffee-0.0.1.tar.gz

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./splitcoffee-0.0.1.zip
          asset_name: splitcoffee-0.0.1.zip
          asset_content_type: application/zip